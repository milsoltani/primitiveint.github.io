---
import FormattedDate from "./FormattedDate.astro"
import { getCollection } from 'astro:content';
import { render } from 'astro:content';

const posts = (await getCollection('blog')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

const renderedPosts = await Promise.all(
  posts.map(async (post) => {
    const { Content } = await render(post);
    return {...post, RenderedContent: Content};
  })
)
---

<section class="posts-container">
    {
      renderedPosts.map((post) => (
        <article>
          <a href={`/blog/${post.id}/`}>
            <h1 class="post-title">{post.data.title}</h1>
          </a>

          <p class="post-meta">
            <FormattedDate date={post.data.pubDate} />
          </p>

          {!!post.data.heroImage && <img width={720} height={260} src={post.data.heroImage} alt="" />}

          <p class="post-description">
            <post.RenderedContent />
          </p>
        </article>
      ))
    }
</section>

<style>
  .posts-container {
		background: white;
		box-shadow: 0 2px 8px rgba(var(--black), 5%);
	}
  .posts-container article {
    max-width: calc(100% - 2em);
    padding: 3em 1em;
		width: 70ch;
    margin: auto;
  }
  .posts-container a {
		text-decoration: none;
  }

  .posts-container article h1 {
    margin-bottom: -10px;
  }
  .post-description {
    text-align: start;
  }
  .post-meta {
    color: #999;
    display: flex;
    justify-content: space-between;
    margin-bottom: !.2em;
  }
  .post-meta a {
    color: #555;
  }
</style>